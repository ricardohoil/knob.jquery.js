/ *! jQuery Knob * / (function (factory) {if (typeof exports === 'object') {module.exports = factory (require ('jquery'));} else if (typeof define === 'function '&& define.amd) {define ([' jquery '], factory);} else {factory (jQuery);}} (function ($) {"use strict"; var k = {}, max = Math.max, min = Math.min; kc = {}; kcd = $ (document); kct = function (e) {return e.originalEvent.touches.length-1;}; ko = function () {var s = this; this .o = nulo; este. $ = nulo; este.i = nulo; este.g = nulo; este.v = nulo; este.cv = nulo; este.x = 0; este.y = 0; este.w = 0; this.h = 0; this. $ C = null; this.c = null; this.t = 0; this.isInit = false; this.fgColor = null; this.pColor = null; this.dH = null; this.cH = null; this.eH = null; this.rH = null; this.scale = 1; this.relative = false; this.relativeWidth = false; this.relativeHeight = false; this. $ div = null ; this.run = function () {var cf = function (e, conf) {var k; para (k en conf) {entonces [k] = conf [k];}
s._carve (). init (); s._configure () ._ draw ();}; if (this. $. data ('kontroled')) return; this. $. data ('kontroled', true); this.extend (); this.o = $. extend ({min: this. $. data ('min')! == undefined? this. $. data ('min'): 0, max: this. $ .data ('max')! == undefined? this. $. data ('max'): 100, stopper: true, readOnly: this. $. data ('readonly') || (this. $. attr ( 'readonly') === 'readonly'), cursor: this. $. data ('cursor') === true && 30 || this. $. data ('cursor') || 0, espesor: this. $. data ('espesor') && Math.max (Math.min (this. $. data ('espesor'), 1), 0.01) || 0.35, lineCap: this. $. data ('linecap') || 'butt ', ancho: este. $. datos (' ancho ') || 200, altura: este. $. datos (' altura ') || 200, displayInput: este. $. datos (' displayinput ') == null | | este. $. datos ('displayinput'),displayPrevious: this. $. data ('displayprevious'), fgColor: this. $. data ('fgcolor') || '# 87CEEB', inputColor: this. $. data ('inputcolor'), font: this. $ .data ('font') || 'Arial', fontWeight: this. $. data ('font-weight') || 'bold', inline: false, step: this. $. data ('step') | | 1, rotación: este. $. Datos ('rotación'), draw: null, change: null, cancel: null, release: null, format: function (v) {return v;}, parse: function (v) {return parseFloat (v);}}, this.o); this.o.flip = this.o.rotation === 'antlockwise' || this.o.rotation === 'acw'; if (! this .o.inputColor) {this.o.inputColor = this.o.fgColor;}font-weight ') ||' bold ', inline: false, step: this. $. data (' step ') || 1, gira: this. $. data (' rotation '), draw: null, change: null, cancel: null, release: null, format: function (v) {return v;}, parse: function (v) {return parseFloat (v);}}, this.o); this.o.flip = this .o.rotation === 'en sentido antihorario' || this.o.rotation === 'acw'; if (! this.o.inputColor) {this.o.inputColor = this.o.fgColor;}font-weight ') ||' bold ', inline: false, step: this. $. data (' step ') || 1, gira: this. $. data (' rotation '), draw: null, change: null, cancel: null, release: null, format: function (v) {return v;}, parse: function (v) {return parseFloat (v);}}, this.o); this.o.flip = this .o.rotation === 'en sentido antihorario' || this.o.rotation === 'acw'; if (! this.o.inputColor) {this.o.inputColor = this.o.fgColor;}
if (this. $. is ('fieldset')) {this.v = {}; this.i = this. $. find ('input'); this.i.each (function (k) {var $ this = $ (this); si [k] = $ this; sv [k] = soparse ($ this.val ()); $ this.bind ('change blur', function () {var val = {}; val [k] = $ this.val (); s.val (s._validate (val));});}); this. $. find ('legend'). remove ();} else {this.i = this. $; this.v = this.o.parse (this. $. val ()); this.v === '' && (this.v = this.o.min); this. $. bind ('blur blur', function () {s.val (s._validate (soparse (s. $. val ())))}};
! this.o.displayInput && this. $. hide (); this. $ c = $ (document.createElement ('canvas')). attr ({width: this.o.width, height: this.o.height}) ; esto. $ div = $ ('<div style = "'
+ (this.o.inline? 'display: inline;': '')
+ 'width:' + this.o.width + 'px; height:' + this.o.height + 'px;'
+ '"> </div>'); this. $. wrap (this. $ div) .forefore (this. $ c); this. $ div = this. $. parent (); if (typeof G_vmlCanvasManager! = = 'indefinido') {G_vmlCanvasManager.initElement (this. $ c [0]);}
this.c = this. $ c [0] .getContext? this. $ c [0] .getContext ('2d'): null; if (! this.c) {throw {name: "CanvasNotSupportedException", mensaje: " No se admite el lienzo. Utilice excanvas en IE8.0. ", ToString: function () {return this.name +": "+ this.message}}}
this.scale = (window.devicePixelRatio || 1) / (this.c.webkitBackingStorePixelRatio || this.c.mozBackingStorePixelRatio || this.c.msBatión de las personas ); this.relativeWidth = this.o.width% 1! == 0 && this.o.width.indexOf ('%'); this.relativeHeight = this.o.height% 1! == 0 && this.o.height.indexOf ('%'); this.relative = this.relativeWidth || this.relativeHeight; this._carve (); if (this.v instanceof Object) {this.cv = {}; this.copy (this.v, this .cv);} else {this.cv = this.v;}
this. $. bind ("configure", cf) .parent (). bind ("configure", cf); this._listen () ._ configure () ._ xy (). init (); this.isInit = true; this. $. val (this.o.format (this.v)); this._draw (); devuelve this;}; this._carve = function () {if (this.relative) {var w = this.relativeWidth ? this. $ div.parent (). width () * parseInt (this.o.width) /100:this.$div.parent (). width (), h = this.relativeHeight? this. $ div.parent () .height () * parseInt (this.o.height) /100:this.$div.parent (). height (); this.w = this.h = Math.min (w, h);} else {this.w = this.o.width; this.h = this.o.height;}
this. $ div.css ({'width': this.w + 'px', 'height': this.h + 'px'}); this. $ c.attr ({width: this.w, height: this. h}); if (this.scale! == 1) {this. $ c [0] .width = this. $ c [0] .width * this.scale; this. $ c [0] .height = this . $ c [0] .height * this.scale; this. $ c.width (this.w); this. $ c.height (this.h);}
devuelve esto;}
this._draw = function () {var d = true; sg = sc; s.clear (); s.dH && (d = s.dH ()); d! == false && s.draw ();}; _touch = function (e) {var touchMove = function (e) {var v = s.xy2val (e.originalEvent.touches [st] .pageX, e.originalEvent.touches [st] .pageY); if (v == s.cv) return; if (s.cH && s.cH (v) === false) return; s.change (s._validate (v)); s._draw ();}; this.t = kct (e ); touchMove (e); kcdbind ("touchmove.k", touchMove) .bind ("touchend.k", function () {kcdunbind ('touchmove.k touchend.k'); s.val (s.cv) ;}); devolver esto;}; this._mouse = function (e) {var mouseMove = function (e) {var v = s.xy2val (e.pageX, e.pageY); if (v == s.cv ) return; if (s.cH && (s.cH (v) === false)) return; s.change (s._validate (v)); s._draw ();}; mouseMove (e); kcdbind ( "mousemove.k", mouseMove) .bind ("keyup.k", función (e) {if (e.keyCode === 27) {kcdunbind ("mouseup.k mousemove.k keyup.k "); if (s.eH && s.eH () === false)
return; s.cancel ();}}). bind ("mouseup.k", función (e) {kcdunbind ('mousemove.k mouseup.k keyup.k'); s.val (s.cv);} ); devuelva esto;}; this._xy = function () {var o = this. $ c.offset (); this.x = o.left; this.y = o.top; return this;}; this. _listen = function () {if (! this.o.readOnly) {this. $ c.bind ("mousedown", function (e) {e.preventDefault (); s._xy () ._ mouse (e);} ) .bind ("touchstart", function (e) {e.preventDefault (); s._xy () ._ touch (e);}); this.listen ();} else {this. $. attr ('readonly ','solo lectura');}
if (this.relative) {$ (window) .resize (function () {s._carve (). init (); s._draw ();});}
devuelva esto;}; this._configure = function () {if (this.o.draw) this.dH = this.o.draw; if (this.o.change) this.cH = this.o.change; if (this.o.cancel) this.eH = this.o.cancel; if (this.o.release) this.rH = this.o.release; if (this.o.displayPrevious) {this.pColor = this. h2rgba (this.o.fgColor, "0.4"); this.fgColor = this.h2rgba (this.o.fgColor, "0.6");} else {this.fgColor = this.o.fgColor;}
devuelva esto;}; this._clear = function () {this. $ c [0] .width = this. $ c [0] .width;}; this._validate = function (v) {var val = (~~ (((v <0)? - 0.5: 0.5) + (v / this.o.step))) * this.o.step; return Math.round (val * 100) / 100;}; this.listen = function () {}; this.extend = function () {}; this.init = function () {}; this.change = function (v) {}; this.val = function (v) {}; this. xy2val = function (x, y) {}; this.draw = function () {}; this.clear = function () {this._clear ();}; this.h2rgba = function (h, a) {var rgb ; h = h.substring (1,7)
rgb = [parseInt (h.substring (0,2), 16), parseInt (h.substring (2,4), 16), parseInt (h.substring (4,6), 16)]; devuelve "rgba ( "+ rgb [0] +", "+ rgb [1] +", "+ rgb [2] +", "+ a +") ";}; this.copy = function (f, t) {for (var i in f) {t [i] = f [i];}};}; k.Dial = function () {kocall (this); this.startAngle = null; this.xy = null; this.radius = null ; this.lineWidth = null; this.cursorExt = null; this.w2 = null; this.PI2 = 2 * Math.PI; this.extend = function () {this.o = $. extend ({bgColor: this. $ .data ('bgcolor') || '# EEEEEE', angleOffset: this. $. data ('angleoffset') || 0, angleArc: this. $. data ('anglearc') || 360, inline: true }, this.o);}; this.val = function (v, triggerRelease) {if (null! = v) {v = this.o.parse (v); if (triggerRelease! == false && v! = this. v && this.rH && this.rH (v) === false) {return;}
this.cv = this.o.stopper? max (min (v, this.o.max), this.o.min): v; this.v = this.cv; this. $. val (this.o. formato (this.v)); this._draw ();} else {return this.v;}}; this.xy2val = function (x, y) {var a, ret; a = Math.atan2 (x- ( this.x + this.w2), - (y-this.y-this.w2)) - this.angleOffset; if (this.o.flip) {a = this.angleArc-a-this.PI2;}
if (this.angleArc! = this.PI2 && (a <0) && (a> -0.5)) {a = 0;} else if (a <0) {a + = this.PI2;}
ret = (a * (this.o.max-this.o.min) /this.angleArc) + this.o.min; this.o.stopper && (ret = max (min (ret, this.o.max) , this.o.min)); return ret;}; this.listen = function () {var s = this, mwTimerStop, mwTimerRelease, mw = function (e) {e.preventDefault (); var ori = e.originalEvent , deltaX = ori.detail || ori.wheelDeltaX, deltaY = ori.detail || ori.wheelDeltaY, v = s._validate (soparse (s. $. val ()))
+ (deltaX> 0 || deltaY> 0? sostep: deltaX <0 || deltaY <0? -sostep: 0); v = max (min (v, somax), somin); s.val (v, false) ; if (s.rH) {clearTimeout (mwTimerStop); mwTimerStop = setTimeout (function () {s.rH (v); mwTimerStop = null;}, 100); if (! mwTimerRelease) {mwTimerRelease = setTimeout (tiempo) {if (mwTimerStop)
s.rH (v); mwTimerRelease = null;}, 200);}}}, kval, to, m = 1, kv = {37: -sostep, 38: sostep, 39: sostep, 40: -sostep}; this. $. bind ("keydown", función (e) {var kc = e.keyCode; if (kc> = 96 && kc <= 105) {kc = e.keyCode = kc-48;}
kval = parseInt (String.fromCharCode (kc)) si if (isNaN (kval)) {(kc! == 13) && kc! == 8 && kc! == 9 && kc! == 189 && (kc! == 190 || s. $ .val (). match (/\./))&& e.preventDefault (); if ($. inArray (kc, [37,38,39,40])> - 1) {e.preventDefault (); var v = soparse (s. $. val ()) + kv [kc] * m; sostopper && (v = max (min (v, somax), somin)); s.change (s._validate (v)); s ._draw (); to = window.setTimeout (function () {m * = 2;}, 30);}}}). bind ("keyup", function (e) {if (isNaN (kval)) {if (to) {window.clearTimeout (to); to = null; m = 1; s.val (s. $. val ());}} else else ((s. $. val ()> somax && s. $. val (somax)) || (s. $. val () <somin && s. $. val (somin))}}); this. $ c.bind ("mousewheel DOMMouseScroll", mw); this. $. bind ( "mousewheel DOMMouseScroll", mw)}; this.init = function () {if (this.v <this.o.min || this.v> this.o.max) {this.v = this.o.min ;}
this. $. val (this.v); this.w2 = this.w / 2; this.cursorExt = this.o.cursor / 100; this.xy = this.w2 * this.scale; this.lineWidth = this .xy * this.o.thickness; this.lineCap = this.o.lineCap; this.radius = this.xy-this.lineWidth / 2; this.o.angleOffset && (this.o.angleOffset = isNaN (this.o .angleOffset)? 0: this.o.angleOffset); this.o.angleArc && (this.o.angleArc = isNaN (this.o.angleArc)? this.PI2: this.o.angleArc); this.angleOffset = this .o.angleOffset * Math.PI / 180; this.angleArc = this.o.angleArc * Math.PI / 180; this.startAngle = 1.5 * Math.PI + this.angleOffset; this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc; var s = max (String (Math.abs (this.o.max)). length, String (Math.abs (this.o.min)). length, 2) +2 ; this.o.displayInput && this.i.css ({'width': ((this.w / 2 + 4) >> 0) + 'px', 'height': ((this.w / 3) >> 0 ) + 'px', 'posición': 'absoluto', 'vertical-align ':' middle ',' margin-top ': ((this.w / 3) >> 0) +' px ',' margin-left ':' - '+ ((this.w * 3 / 4 + 2) >> 0) + 'px', 'border': 0, 'background': 'none', 'font': this.o.fontWeight + '' + ((this.w / s) >> 0 ) + 'px' + this.o.font, 'text-align': 'center', 'color': this.o.inputColor || this.o.fgColor, 'padding': '0px', '- webkit -appearance ':' none '}) || this.i.css ({' width ':' 0px ',' visibilidad ':' hidden '});}; this.change = function (v) {this.cv = v; esto. $. val (this.o.format (v));}; this.angle = function (v) {return (v-this.o.min) * this.angleArc / (this.o. max-this.o.min);}; this.arc = function (v) {var sa, ea; v = this.angle (v); if (this.o.flip) {sa = this.endAngle + 0.00001 ; ea = sa-v-0.00001;} else {sa = this.startAngle-0.00001;ea = sa + v + 0.00001;}
this.o.cursor && (sa = ea-this.cursorExt) && (ea = ea + this.cursorExt); return {s: sa, e: ea, d: this.o.flip &&! this.o.cursor}; }; this.draw = function () {var c = this.g, a = this.arc (this.cv), pa, r = 1; c.lineWidth = this.lineWidth; c.lineCap = this.lineCap; if (this.o.bgColor! == "none") {c.beginPath (); c.strokeStyle = this.o.bgColor; c.arc (this.xy, this.xy, this.radius, this.endAngle -0.00001, this.startAngle + 0.00001, true); c.stroke ();}
if (this.o.displayPrevious) {pa = this.arc (this.v); c.beginPath (); c.strokeStyle = this.pColor; c.arc (this.xy, this.xy, this.radius, pa.s, pa.e, pa.d); c.stroke (); r = this.cv == this.v;}
c.beginPath (); c.strokeStyle = r? this.o.fgColor: this.fgColor; c.arc (this.xy, this.xy, this.radius, as, ae, ad); c.stroke () ;}; this.cancel = function () {this.val (this.v);};}; $. fn.dial = $. fn.knob = function (o) {return this.each (function () { var d = nuevo k.Dial (); do = o; d. $ = $ (this); d.run ();}). parent ();};}));
